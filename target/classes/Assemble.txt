CompileCommand: dontinline *VolatileAssembly.readAndWrite
CompileCommand: compileonly *VolatileAssembly.readAndWrite
Compiled method (c1)      74    1       3       thread.Volatile.VolatileAssembly::readAndWrite (9 bytes)
 total in heap  [0x0000012534f70010,0x0000012534f704a8] = 1176
 relocation     [0x0000012534f70190,0x0000012534f701c8] = 56
 main code      [0x0000012534f701e0,0x0000012534f70340] = 352
 stub code      [0x0000012534f70340,0x0000012534f703f0] = 176
 oops           [0x0000012534f703f0,0x0000012534f703f8] = 8
 metadata       [0x0000012534f703f8,0x0000012534f70400] = 8
 scopes data    [0x0000012534f70400,0x0000012534f70430] = 48
 scopes pcs     [0x0000012534f70430,0x0000012534f704a0] = 112
 dependencies   [0x0000012534f704a0,0x0000012534f704a8] = 8
Loaded disassembler from D:\Program Files\Java\jdk-12.0.2\bin\server\hsdis-amd64.dll
----------------------------------------------------------------------
thread/Volatile/VolatileAssembly.readAndWrite()V  [0x0000012534f701e0, 0x0000012534f703f0]  528 bytes
Argument 0 is unknown.RIP: 0x12534f701e0 Code size: 0x00000210
[Disassembling for mach='amd64']
[Entry Point]
[Constants]
  # {method} {0x00000125503e03f0} 'readAndWrite' '()V' in 'thread/Volatile/VolatileAssembly'
  #           [sp+0x40]  (sp of caller)
  0x0000012534f701e0: mov     r10d,dword ptr [rdx+8h]
  0x0000012534f701e4: shl     r10,3h
  0x0000012534f701e8: mov     r12,800000000h
  0x0000012534f701f2: add     r10,r12
  0x0000012534f701f5: xor     r12,r12
  0x0000012534f701f8: cmp     r10,rax
  0x0000012534f701fb: jne     125349f7f00h                  ;   {runtime_call ic_miss_stub}
  0x0000012534f70201: nop     word ptr [rax+rax+0h]
  0x0000012534f7020c: nop
  0x0000012534f70210: nop     word ptr [rax+rax+0h]
  0x0000012534f7021b: nop
  0x0000012534f7021f: nop
[Verified Entry Point]
  0x0000012534f70220: mov     dword ptr [rsp+0ffffffffffff9000h],eax
  0x0000012534f70227: push    rbp
  0x0000012534f70228: sub     rsp,30h
  0x0000012534f7022c: mov     rsi,125503e05f0h              ;   {metadata(method data for {method} {0x00000125503e03f0} 'readAndWrite' '()V' in 'thread/Volatile/VolatileAssembly')}
  0x0000012534f70236: mov     edi,dword ptr [rsi+104h]
  0x0000012534f7023c: add     edi,8h
  0x0000012534f7023f: mov     dword ptr [rsi+104h],edi
  0x0000012534f70245: jmp     12534f702ach                  ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@0 (line 13)

  0x0000012534f7024a: mov     qword ptr [rsp+20h],rdx
  0x0000012534f7024f: mov     rdx,1h                        ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@2 (line 13)

  0x0000012534f70259: nop     word ptr [rax+rax+0h]
  0x0000012534f7025f: call    125349f8680h                  ; ImmutableOopMap{[32]=Oop }
                                                            ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@2 (line 13)
                                                            ;   {static_call}
  0x0000012534f70264: movsx   esi,byte ptr [r15+30h]
  0x0000012534f70269: cmp     esi,0h
  0x0000012534f7026c: mov     rdx,qword ptr [rsp+20h]
  0x0000012534f70271: jne     12534f702cah
  0x0000012534f70277: mov     r10,rax
  0x0000012534f7027a: shr     r10,3h
  0x0000012534f7027e: mov     dword ptr [rdx+0ch],r10d
  0x0000012534f70282: lock add dword ptr [rsp+0ffffffffffffffc0h],0h
  0x0000012534f70288: mov     rsi,rdx
  0x0000012534f7028b: xor     rsi,rax
  0x0000012534f7028e: shr     rsi,14h
  0x0000012534f70292: cmp     rsi,0h
  0x0000012534f70296: jne     12534f702e2h                  ;*putfield v1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@5 (line 13)

  0x0000012534f7029c: add     rsp,30h
  0x0000012534f702a0: pop     rbp
  0x0000012534f702a1: mov     r10,qword ptr [r15+108h]
  0x0000012534f702a8: test    dword ptr [r10],eax           ;   {poll_return}
  0x0000012534f702ab: ret
  0x0000012534f702ac: mov     r10,125503e03e8h              ;   {metadata({method} {0x00000125503e03f0} 'readAndWrite' '()V' in 'thread/Volatile/VolatileAssembly')}
  0x0000012534f702b6: mov     qword ptr [rsp+8h],r10
  0x0000012534f702bb: mov     qword ptr [rsp],0ffffffffffffffffh
  0x0000012534f702c3: call    12534ac6900h                  ; ImmutableOopMap{rdx=Oop }
                                                            ;*synchronization entry
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@-1 (line 13)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000012534f702c8: jmp     12534f7024ah
  0x0000012534f702ca: mov     esi,dword ptr [rdx+0ch]
  0x0000012534f702cd: shl     rsi,3h
  0x0000012534f702d1: cmp     rsi,0h
  0x0000012534f702d5: je      12534f70277h
  0x0000012534f702d7: mov     qword ptr [rsp],rsi
  0x0000012534f702db: call    12534ac6f00h                  ;   {runtime_call g1_pre_barrier_slow}
  0x0000012534f702e0: jmp     12534f70277h
  0x0000012534f702e2: cmp     rax,0h
  0x0000012534f702e6: je      12534f7029ch
  0x0000012534f702e8: mov     qword ptr [rsp],rdx
  0x0000012534f702ec: call    12534ac7200h                  ;   {runtime_call g1_post_barrier_slow}
  0x0000012534f702f1: jmp     12534f7029ch
  0x0000012534f702f3: nop
  0x0000012534f702f4: nop
  0x0000012534f702f5: mov     rax,qword ptr [r15+408h]
  0x0000012534f702fc: mov     r10,0h
  0x0000012534f70306: mov     qword ptr [r15+408h],r10
  0x0000012534f7030d: mov     r10,0h
  0x0000012534f70317: mov     qword ptr [r15+410h],r10
  0x0000012534f7031e: add     rsp,30h
  0x0000012534f70322: pop     rbp
  0x0000012534f70323: jmp     12534ac0f80h                  ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000012534f70328: hlt
  0x0000012534f70329: hlt
  0x0000012534f7032a: hlt
  0x0000012534f7032b: hlt
  0x0000012534f7032c: hlt
  0x0000012534f7032d: hlt
  0x0000012534f7032e: hlt
  0x0000012534f7032f: hlt
  0x0000012534f70330: hlt
  0x0000012534f70331: hlt
  0x0000012534f70332: hlt
  0x0000012534f70333: hlt
  0x0000012534f70334: hlt
  0x0000012534f70335: hlt
  0x0000012534f70336: hlt
  0x0000012534f70337: hlt
  0x0000012534f70338: hlt
  0x0000012534f70339: hlt
  0x0000012534f7033a: hlt
  0x0000012534f7033b: hlt
  0x0000012534f7033c: hlt
  0x0000012534f7033d: hlt
  0x0000012534f7033e: hlt
  0x0000012534f7033f: hlt
[Stub Code]
  0x0000012534f70340: nop     dword ptr [rax+rax+0h]        ;   {no_reloc}
  0x0000012534f70345: mov     rbx,0h                        ;   {static_stub}
  0x0000012534f7034f: jmp     12534f7034fh                  ;   {runtime_call}
[Exception Handler]
  0x0000012534f70354: call    12534ac3680h                  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000012534f70359: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x0000012534f7035e: sub     rsp,80h
  0x0000012534f70365: mov     qword ptr [rsp+78h],rax
  0x0000012534f7036a: mov     qword ptr [rsp+70h],rcx
  0x0000012534f7036f: mov     qword ptr [rsp+68h],rdx
  0x0000012534f70374: mov     qword ptr [rsp+60h],rbx
  0x0000012534f70379: mov     qword ptr [rsp+50h],rbp
  0x0000012534f7037e: mov     qword ptr [rsp+48h],rsi
  0x0000012534f70383: mov     qword ptr [rsp+40h],rdi
  0x0000012534f70388: mov     qword ptr [rsp+38h],r8
  0x0000012534f7038d: mov     qword ptr [rsp+30h],r9
  0x0000012534f70392: mov     qword ptr [rsp+28h],r10
  0x0000012534f70397: mov     qword ptr [rsp+20h],r11
  0x0000012534f7039c: mov     qword ptr [rsp+18h],r12
  0x0000012534f703a1: mov     qword ptr [rsp+10h],r13
  0x0000012534f703a6: mov     qword ptr [rsp+8h],r14
  0x0000012534f703ab: mov     qword ptr [rsp],r15
  0x0000012534f703af: mov     rcx,7ff9c8a4dd90h             ;   {external_word}
  0x0000012534f703b9: mov     rdx,12534f70359h              ;   {internal_word}
  0x0000012534f703c3: mov     r8,rsp
  0x0000012534f703c6: and     rsp,0fffffffffffffff0h
  0x0000012534f703ca: mov     r10,7ff9c875fd10h             ;   {runtime_call}
  0x0000012534f703d4: call indirect r10
  0x0000012534f703d7: hlt
[Deopt Handler Code]
  0x0000012534f703d8: mov     r10,12534f703d8h              ;   {section_word}
  0x0000012534f703e2: push    r10
  0x0000012534f703e4: jmp     125349f97a0h                  ;   {runtime_call DeoptimizationBlob}
  0x0000012534f703e9: hlt
  0x0000012534f703ea: hlt
  0x0000012534f703eb: hlt
  0x0000012534f703ec: hlt
  0x0000012534f703ed: hlt
  0x0000012534f703ee: hlt
  0x0000012534f703ef: hlt

ImmutableOopMap{[32]=Oop }pc offsets: 132 
ImmutableOopMap{rdx=Oop }pc offsets: 232 Compiled method (c1)      87    2       1       thread.Volatile.VolatileAssembly::readAndWrite (9 bytes)
 total in heap  [0x000001253c4a0010,0x000001253c4a0448] = 1080
 relocation     [0x000001253c4a0190,0x000001253c4a01c8] = 56
 main code      [0x000001253c4a01e0,0x000001253c4a0300] = 288
 stub code      [0x000001253c4a0300,0x000001253c4a03b0] = 176
 oops           [0x000001253c4a03b0,0x000001253c4a03b8] = 8
 metadata       [0x000001253c4a03b8,0x000001253c4a03c0] = 8
 scopes data    [0x000001253c4a03c0,0x000001253c4a03e0] = 32
 scopes pcs     [0x000001253c4a03e0,0x000001253c4a0440] = 96
 dependencies   [0x000001253c4a0440,0x000001253c4a0448] = 8
----------------------------------------------------------------------
thread/Volatile/VolatileAssembly.readAndWrite()V  [0x000001253c4a01e0, 0x000001253c4a03b0]  464 bytes
Argument 0 is unknown.RIP: 0x1253c4a01e0 Code size: 0x000001d0
[Entry Point]
[Constants]
  # {method} {0x00000125503e03f0} 'readAndWrite' '()V' in 'thread/Volatile/VolatileAssembly'
  #           [sp+0x40]  (sp of caller)
  0x000001253c4a01e0: mov     r10d,dword ptr [rdx+8h]
  0x000001253c4a01e4: shl     r10,3h
  0x000001253c4a01e8: mov     r12,800000000h
  0x000001253c4a01f2: add     r10,r12
  0x000001253c4a01f5: xor     r12,r12
  0x000001253c4a01f8: cmp     r10,rax
  0x000001253c4a01fb: jne     125349f7f00h                  ;   {runtime_call ic_miss_stub}
  0x000001253c4a0201: nop     word ptr [rax+rax+0h]
  0x000001253c4a020c: nop
  0x000001253c4a0210: nop     word ptr [rax+rax+0h]
  0x000001253c4a021b: nop
  0x000001253c4a021f: nop
[Verified Entry Point]
  0x000001253c4a0220: mov     dword ptr [rsp+0ffffffffffff9000h],eax
  0x000001253c4a0227: push    rbp
  0x000001253c4a0228: sub     rsp,30h                       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@0 (line 13)

  0x000001253c4a022c: mov     qword ptr [rsp+20h],rdx
  0x000001253c4a0231: mov     rdx,1h                        ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@2 (line 13)

  0x000001253c4a023b: nop     dword ptr [rax+0h]
  0x000001253c4a023f: call    125349f8680h                  ; ImmutableOopMap{[32]=Oop }
                                                            ;*invokestatic valueOf {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@2 (line 13)
                                                            ;   {static_call}
  0x000001253c4a0244: movsx   esi,byte ptr [r15+30h]
  0x000001253c4a0249: cmp     esi,0h
  0x000001253c4a024c: mov     rdx,qword ptr [rsp+20h]
  0x000001253c4a0251: jne     1253c4a028ch
  0x000001253c4a0257: mov     r10,rax
  0x000001253c4a025a: shr     r10,3h
  0x000001253c4a025e: mov     dword ptr [rdx+0ch],r10d
  0x000001253c4a0262: lock add dword ptr [rsp+0ffffffffffffffc0h],0h
  0x000001253c4a0268: mov     rsi,rdx
  0x000001253c4a026b: xor     rsi,rax
  0x000001253c4a026e: shr     rsi,14h
  0x000001253c4a0272: cmp     rsi,0h
  0x000001253c4a0276: jne     1253c4a02a4h                  ;*putfield v1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - thread.Volatile.VolatileAssembly::readAndWrite@5 (line 13)

  0x000001253c4a027c: add     rsp,30h
  0x000001253c4a0280: pop     rbp
  0x000001253c4a0281: mov     r10,qword ptr [r15+108h]
  0x000001253c4a0288: test    dword ptr [r10],eax           ;   {poll_return}
  0x000001253c4a028b: ret
  0x000001253c4a028c: mov     esi,dword ptr [rdx+0ch]
  0x000001253c4a028f: shl     rsi,3h
  0x000001253c4a0293: cmp     rsi,0h
  0x000001253c4a0297: je      1253c4a0257h
  0x000001253c4a0299: mov     qword ptr [rsp],rsi
  0x000001253c4a029d: call    12534ac6f00h                  ;   {runtime_call g1_pre_barrier_slow}
  0x000001253c4a02a2: jmp     1253c4a0257h
  0x000001253c4a02a4: cmp     rax,0h
  0x000001253c4a02a8: je      1253c4a027ch
  0x000001253c4a02aa: mov     qword ptr [rsp],rdx
  0x000001253c4a02ae: call    12534ac7200h                  ;   {runtime_call g1_post_barrier_slow}
  0x000001253c4a02b3: jmp     1253c4a027ch
  0x000001253c4a02b5: nop
  0x000001253c4a02b6: nop
  0x000001253c4a02b7: mov     rax,qword ptr [r15+408h]
  0x000001253c4a02be: mov     r10,0h
  0x000001253c4a02c8: mov     qword ptr [r15+408h],r10
  0x000001253c4a02cf: mov     r10,0h
  0x000001253c4a02d9: mov     qword ptr [r15+410h],r10
  0x000001253c4a02e0: add     rsp,30h
  0x000001253c4a02e4: pop     rbp
  0x000001253c4a02e5: jmp     12534ac0f80h                  ;   {runtime_call unwind_exception Runtime1 stub}
  0x000001253c4a02ea: hlt
  0x000001253c4a02eb: hlt
  0x000001253c4a02ec: hlt
  0x000001253c4a02ed: hlt
  0x000001253c4a02ee: hlt
  0x000001253c4a02ef: hlt
  0x000001253c4a02f0: hlt
  0x000001253c4a02f1: hlt
  0x000001253c4a02f2: hlt
  0x000001253c4a02f3: hlt
  0x000001253c4a02f4: hlt
  0x000001253c4a02f5: hlt
  0x000001253c4a02f6: hlt
  0x000001253c4a02f7: hlt
  0x000001253c4a02f8: hlt
  0x000001253c4a02f9: hlt
  0x000001253c4a02fa: hlt
  0x000001253c4a02fb: hlt
  0x000001253c4a02fc: hlt
  0x000001253c4a02fd: hlt
  0x000001253c4a02fe: hlt
  0x000001253c4a02ff: hlt
[Stub Code]
  0x000001253c4a0300: nop     dword ptr [rax+rax+0h]        ;   {no_reloc}
  0x000001253c4a0305: mov     rbx,0h                        ;   {static_stub}
  0x000001253c4a030f: jmp     1253c4a030fh                  ;   {runtime_call}
[Exception Handler]
  0x000001253c4a0314: call    12534ac3680h                  ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000001253c4a0319: mov     qword ptr [rsp+0ffffffffffffffd8h],rsp
  0x000001253c4a031e: sub     rsp,80h
  0x000001253c4a0325: mov     qword ptr [rsp+78h],rax
  0x000001253c4a032a: mov     qword ptr [rsp+70h],rcx
  0x000001253c4a032f: mov     qword ptr [rsp+68h],rdx
  0x000001253c4a0334: mov     qword ptr [rsp+60h],rbx
  0x000001253c4a0339: mov     qword ptr [rsp+50h],rbp
  0x000001253c4a033e: mov     qword ptr [rsp+48h],rsi
  0x000001253c4a0343: mov     qword ptr [rsp+40h],rdi
  0x000001253c4a0348: mov     qword ptr [rsp+38h],r8
  0x000001253c4a034d: mov     qword ptr [rsp+30h],r9
  0x000001253c4a0352: mov     qword ptr [rsp+28h],r10
  0x000001253c4a0357: mov     qword ptr [rsp+20h],r11
  0x000001253c4a035c: mov     qword ptr [rsp+18h],r12
  0x000001253c4a0361: mov     qword ptr [rsp+10h],r13
  0x000001253c4a0366: mov     qword ptr [rsp+8h],r14
  0x000001253c4a036b: mov     qword ptr [rsp],r15
  0x000001253c4a036f: mov     rcx,7ff9c8a4dd90h             ;   {external_word}
  0x000001253c4a0379: mov     rdx,1253c4a0319h              ;   {internal_word}
  0x000001253c4a0383: mov     r8,rsp
  0x000001253c4a0386: and     rsp,0fffffffffffffff0h
  0x000001253c4a038a: mov     r10,7ff9c875fd10h             ;   {runtime_call}
  0x000001253c4a0394: call indirect r10
  0x000001253c4a0397: hlt
[Deopt Handler Code]
  0x000001253c4a0398: mov     r10,1253c4a0398h              ;   {section_word}
  0x000001253c4a03a2: push    r10
  0x000001253c4a03a4: jmp     125349f97a0h                  ;   {runtime_call DeoptimizationBlob}
  0x000001253c4a03a9: hlt
  0x000001253c4a03aa: hlt
  0x000001253c4a03ab: hlt
  0x000001253c4a03ac: hlt
  0x000001253c4a03ad: hlt
  0x000001253c4a03ae: hlt
  0x000001253c4a03af: hlt

ImmutableOopMap{[32]=Oop }pc offsets: 100 